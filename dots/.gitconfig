[user]
  editor = vi
[color]
  diff = auto
  status = auto
  branch = auto
[alias]
  # list local branches, asterisk will indicate current branch
  b = branch
  # list local and remote branches, asterisk will indicate current branch
  ba = branch -a
  ci = commit
  co = checkout
  d = difftool --extcmd=ksdiff --no-prompt
  p = add -p
  s = stash
  ss = stash save
  sl = stash list
  sa = stash apply
  sc = stash clear
  st = status
  h = cherry-pick
  track = checkout --track
  # recommended undo for git
  rv = checkout --
  # display all defined git aliases
  aliases = !git config --get-regexp 'alias.*'|colrm 1 6|sed 's/[ ]/ = /'
  # if things are really screwed up in a clone
  hard = reset --hard origin/master
  # pretty log history
  hist = log --since=1.day --relative-date --stat
  mine = log --since=1.day --relative-date --stat --committer=fallwith
  # determine the name of the current working (checked out) branch
  bname = !sh -c 'git branch | sed -e "/^[^*]/d" | tr -d "^*\\ "'
  #bname = !sh -c "git branch | sed -n -e 's/^\* \(.*\)/\1/p'"
  # push a local branch to the remote repo
  badd = !sh -c 'git push origin $0'
  # pull/push from/to the remote repo for the current working branch
  #bpull = !sh -c '_branch_name=`git bname|tr -d "\\\\n"` && git pull origin $_branch_name'
  #bpush = !sh -c '_branch_name=`git bname|tr -d "\\\\n"` && git push origin $_branch_name'
  bpull = !sh -c '_branch_name=`git bname` && git pull origin $_branch_name'
  bpullr = !sh -c '_branch_name=`git bname` && git pull --rebase origin $_branch_name'
  bpush = !sh -c '_branch_name=`git bname` && git push origin $_branch_name'
  # begin tracking (add) a remote branch (requires git 1.5+)
  btrack = !sh -c 'git checkout --track origin/$0'
  # OR: btrack = !sh -c 'git branch --track $0 origin/$0'
  # OR: btrack = !sh -c 'git co -t -b $0 remotes/origin/$0'
  # OR: btrack = !sh -c 'git remote add -t origin/$0'
  # delete a local branch that has been merged to master and not pushed to remote
  bdel = branch -d
  # delete a local branch that has not been merged and not pushed to remote
  bdelf = branch -D
  # delete a remote branch that has been merged
  bdelr = !sh -c 'git branch -d -r origin/$0'
  # delete a remote branch that has not been merged
  bdelrf = !sh -c 'git branch -D -r origin/$0'
  # wipe (remove) a remote branch from origin (remove the branch from GitHub)
  bwipe = !sh -c 'git push origin :$0'
  # add an empty dir to a repo (git emptydir [dirname])
  emptydir = !bash -c 'str=$0/*\\\\n!.gitignore && mkdir -p $0 && echo -e $str > $0/.gitignore'
  # report the current revision
  revision = !git show|head -1|cut -c8-
  rev = !git revision
  pullr = pull --rebase
  longmessage = commit -F- <<EOF
  forceclean = clean -fx
[core]
  excludesfile = ~/.gitignore
[push]
  default = tracking
#
# NOTES:
#
# to tag:
# $> git tag -a <tag name> -m "<message>"
# $> git push --tags
#
# which revision does a tag point to?
# $> git rev-list sdod_20121103 | head -n 1
#
# which branch does a commit point to?
# $> git branch --contains a698ffa9aa26c3f4512144072db63a635860e01f
#
