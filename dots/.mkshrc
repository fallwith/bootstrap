# vim:fileencoding=utf-8:ft=conf:foldmethod=marker

# OS detection {{{
function running_debian() {
  (command -v apt-get >/dev/null) && return
  false
}
# }}}

# Color {{{
# color  - bg - fg
# =
# black  - 40 - 30
# red    - 41 - 31
# green  - 42 - 32
# yellow - 43 - 33
# blue   - 44 - 34
# purple - 45 - 35
# cyan   - 46 - 36
# grey   - 47 - 37
# =
# use '\E[xxm' where xx is a foreground color, use '\E[0m' to reset
# echo '\E[35mpurple \E[32mgreen \E[36mcyan \E[0m'

# use tput setaf to access the base 16 colors
# RED=$(tput setaf 1)
# GRN=$(tput setaf 2)
# YLW=$(tput setaf 3)
# BLU=$(tput setaf 4)
# MGT=$(tput setaf 5)
# CYN=$(tput setaf 6)
# GRE=$(tput setaf 7)
# WHT=$(tput setaf 8)
# =
# REDBOLD=$(tput setaf 9)
# GRNBOLD=$(tput setaf 10)
# YLWBOLD=$(tput setaf 11)
# BLUBOLD=$(tput setaf 12)
# MGTBOLD=$(tput setaf 13)
# CYNBOLD=$(tput setaf 14)
# WHTBOLD=$(tput setaf 15)
# BLK=$(tput setaf 16)
# =
# RESET=$(tput sgr0)
# =
# echo "${MGT}magenta ${GRN}green ${CYN}cyan ${RESET}"
bgmode=dark
if [[ -e "$HOME/.bgmode" ]]; then
  bgmode=$(<~/.bgmode)
fi
# }}}

# Basics {{{
function _prompt_pwd() {
  if [[ "$PWD" == "$HOME" ]]; then
    p='~'
  else
    p=${PWD##*/}
    p=${p:-/}
  fi
  echo $p
}
# export PS1=$'\E[35m$(_prompt_pwd) \E[32m$(date +%H:%M:%S) \E[36m$ \E[0m'
# BLU=$(tput setaf 39)
BLU='[38;5;39m'
# PNK=$(tput setaf 201)
PNK='[38;5;201m'
# PRP=$(tput setaf 105)
PRP='[38;5;105m'
# RESET=$(tput sgr0)
RESET='(B[m'
export PS1=$'${PNK}$(_prompt_pwd) ${PRP}$(date +%H:%M:%S) ${BLU}$ ${RESET}'

HISTFILE="$HOME/.mksh_history"
HISTSIZE=20000
export VISUAL="nvim"
export EDITOR="$VISUAL"
# constrain manpages to 80 columns
export MANWIDTH=80
# disable history for less
export LESSHISTFILE=-
if (command -v kitty >/dev/null); then
  export TERM=xterm-kitty
else
  export TERM=xterm-256color
fi
set -o emacs
set -o noclobber
export PATH=~/bin:$PATH
# }}}

# Aliases {{{
alias usage='du -sch .[!.]* * |sort -h'
# prevent cp/mv overwrites
alias cp='cp -i'
alias mv='mv -i'
alias m='cmatrix -absu 4 -C magenta'
# alias dirs='find . -type d -not -name .'
alias dirs='fd -td'
alias cls='\\builtin print -n \\ec'
alias sudo!!='sudo mksh -c "$(\\builtin fc -ln -1)"'
if running_debian; then
  alias z='cd $HOME/$(fd -td -d1 . ~ ~/.config ~/git | sed "s|$HOME/||g" | fzf +m)'
else
  alias z='cd $HOME/$(fd -td -d1 . ~ ~/.config ~/git/public ~/git/private | sed "s|$HOME/||g" | fzf +m)'
fi
alias v='nvim_launch $(\nvim --headless --noplugin -co +q 2>&1 | grep -v "term://" | cut -d" " -f2- | tr -d "\r" | fzf +m)'
# BSD ls
alias ll='ls -lGAFTh'
alias font="kitty @ set-font-size"
alias b='bundle exec'
alias brake='b rake'
alias history='echo $(export FZF_DEFAULT_OPTS="--height 40% $FZF_DEFAULT_OPTS -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort +m"; builtin fc -rnl 1 | perl -ne '\''print "$1\n" if!$u{/\s+(.*)/, $1}++'\'' | fzf)'
alias reload='. ~/.mkshrc'

# }}}

# Bindings {{{
bind -m '^R'='^uhistory^[^e^a^e'
# }}}

# Functions {{{
function pidrunning() {
  ps -p $1 >/dev/null
}

function 15() {
  pid=$1
  for signal in 15 2 1 9; do
    cmd="kill -$signal $pid"
    echo $cmd
    eval $cmd
    for i in $(seq 20); do
      if ! (pidrunning $pid); then
        echo "pid $pid no longer exists"
        return 0
      fi
      sleep 0.1
    done
  done
  if (pidrunning $pid); then
    echo "pid $pid still exists"
  fi
}

# usage: upload <IP ADDRESS> <LOCAL PATH> <REMOTE PATH>
function upload() {
  rsync --progress -avhLe ssh "$2" $1:"$3"
}

# usage: download <IP ADDRESS> <REMOTE PATH> <LOCAL PATH>
function download() {
  rsync --progress --rsync-path="sudo rsync" -avhLe ssh $1:"$2" "$3"
}

# which process is using a port
function port() {
  p=$1
  if [ "$p" == "" ]; then
    echo "port() - determine which process is using a port"
    echo "Usage: port <port number>"
    return
  fi
  lsof -i :$p
}

function fail() {
  while "$@"; do :; done
}

# }}}

# python {{{
export PATH=~/Library/Python/3.7/bin:$PATH
# }}}

# asdf {{{
source ~/.asdf/asdf.sh
# }}}

# Go {{{
export GOPATH=~/.go
export PATH=$GOPATH/bin:$PATH
alias gom="gometalinter --enable-all --line-length=120 --deadline=180s ./..."
alias got='go test -v ./...'
# }}}

# FZF {{{
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
if [[ "$bgmode" == "light" ]]; then
  # paper color with an #eeeeee -> #ffffff bg swap
  export FZF_DEFAULT_OPTS='--no-mouse
      --color=fg:#4d4d4c,bg:#ffffff,hl:#d7005f
      --color=fg+:#4d4d4c,bg+:#e8e8e8,hl+:#d7005f
      --color=info:#4271ae,prompt:#8959a8,pointer:#d7005f
      --color=marker:#4271ae,spinner:#4271ae,header:#4271ae'
else
  export FZF_DEFAULT_OPTS='--no-mouse --color fg:-1,bg:-1,hl:230,fg+:3,bg+:233,hl+:229
      --color info:150,prompt:110,spinner:150,pointer:167,marker:174'
fi
# }}}}

# Rust {{{
[[ -e "$HOME/.cargo/env" ]] && source "$HOME/.cargo/env"
# }}}

# Node {{{
# export PATH="./node_modules/.bin:$PATH"
# }}}

# exa {{{
# -l = long (table) format
# -a = display all (including hidden) files
# -g = display each file's group
# -F = display a type indicator by files (dirs have a trailing slash, like ls -p)
# --group-directories-first = does what it says on the tin
# --git = provides a git status for each file (if under revision control)
# --time-style long-iso = use a long iso format for date/time info
# alias ll="exa -lagF --group-directories-first --git --time-style long-iso"
# }}}

# Vim / Neovim {{{
if [ -n "$NVIM_LISTEN_ADDRESS" ]; then
  nvim_target='nvr -o'
else
  nvim_target=\nvim
fi
function nvim_launch() {
  if [[ -n $NVIM_LISTEN_ADDRESS && "$#" -eq 0 ]]; then
    echo "you're already in neovim..."
  else
    $nvim_target "$@"
  fi
}
alias nvim=nvim_launch
alias n=nvim_launch
alias vi=nvim_launch
alias vim=nvim_launch
alias vimwiki="$nvim_target ~/.vimwiki/index.md"
alias vw=vimwiki
alias guide='$nvim_target ~/git/public/vim_guide/vim_guide.md'
alias no="nvr -o"
# }}}

# Postgresql {{{
# alias pgstart='pg_ctl -D /usr/local/var/postgres start'
# alias pgstop='pg_ctl -D /usr/local/var/postgres stop'
export PGUSER=postgres
export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/10/bin
export PGHOST=localhost
# }}}

# Redis {{{
alias redisstart='redis-server /usr/local/etc/redis.conf &'
alias redisstop='pkill redis-server'
# }}}

# colorschemes {{{

function setcolorscheme() {
  vimcontent="$1"
  kittycolors="$2"
  vcs=~/.config/kitty/vimcolorscheme
  rm -f $vcs
  echo -e "$vimcontent" > $vcs
  ln -sf "$HOME/.config/kitty/${kittycolors}.conf" "$HOME/.config/kitty/colorscheme.conf"
  kitty @ set-colors --all --configured "~/.config/kitty/${kittycolors}.conf"
}
function cs() {
  choices='Fairy Floss\nGruvbox Dark\nGruvbox Light\nTomorrowBox\nSolarized8 Flat\nIceberg\nSeagull\nTender'
  choice=$(echo "$choices" | fzf)
  case "$choice" in
    "Fairy Floss" )
      setcolorscheme "set bg=dark\ncolorscheme fairyfloss" fairyfloss
      ;;
    "Gruvbox Dark" )
      setcolorscheme "set bg=dark\ncolorscheme gruvbox" gruvbox-dark
      ;;
    "Gruvbox Light" )
      setcolorscheme "set bg=light\ncolorscheme gruvbox" gruvbox-light
      ;;
    "TomorrowBox" )
      setcolorscheme "set bg=dark\ncolorscheme gruvbox" tomorrow-night-bright
      ;;
    "Solarized8 Flat" )
      setcolorscheme "set bg=light\ncolorscheme solarized8_flat" solarized8_flat
      ;;
    "Iceberg" )
      setcolorscheme "set bg=dark\ncolorscheme iceberg" iceberg
      ;;
    "Seagull" )
      setcolorscheme "set bg=light\ncolorscheme seagull" seagull
      ;;
    "Tender" )
      setcolorscheme "set bg=dark\ncolorscheme tender" tender
      ;;
  esac
}

# }}}

# Crostini {{{
# if (grep -q "^PRETTY_NAME=\"Debian" /etc/os-release 2>/dev/null); then
if running_debian; then
  # Linux ls
  alias ll='ls -lAFh --color --full-time'

  # https://snugug.com/musings/developing-on-chrome-os/
  function open() {
    setsid nohup xdg-open $1 >/dev/null 2>/dev/null
  }
  # alias pbcopy='xclip -selection clipboard'
  # alias pbpaste='xclip -selection clipboard -o'
fi
# }}}

# .mkshrc_private {{{
  if [ -e ~/.mkshrc_private ]; then
    source ~/.mkshrc_private
  fi
# }}}
