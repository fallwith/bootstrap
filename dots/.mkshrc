# vim:fileencoding=utf-8:ft=conf:foldmethod=marker

# Color {{{
# color  - bg - fg
# =
# black  - 40 - 30
# red    - 41 - 31
# green  - 42 - 32
# yellow - 43 - 33
# blue   - 44 - 34
# purple - 45 - 35
# cyan   - 46 - 36
# grey   - 47 - 37
# }}}

# Basics {{{
function _prompt_pwd() {
  if [[ "$PWD" == "$HOME" ]]; then
    p='~'
  else
    p=${PWD##*/}
    p=${p:-/}
  fi
  echo $p
}
export PS1=$'\E[35m$(_prompt_pwd) \E[32m$(date +%H:%M:%S) \E[36m$ \E[0m'
HISTFILE="$HOME/.mksh_history"
HISTSIZE=20000
export VISUAL="nvim"
export EDITOR="$VISUAL"
if (command -v kitty >/dev/null); then
  export TERM=xterm-kitty
else
  export TERM=xterm-256color
fi
set -o emacs
set -o noclobber
# }}}

# Aliases {{{
alias usage='du -sch .[!.]* * |sort -h'
# prevent cp/mv overwrites
alias cp='cp -i'
alias mv='mv -i'
alias m='cmatrix -absu 4 -C magenta'
#alias dirs='find . -type d -not -name .'
alias dirs='fd -td'
# }}}

# Functions {{{
function pidrunning() {
  ps -p $1 >/dev/null
}

function 15() {
  pid=$1
  for signal in 15 2 1 9; do
    cmd="kill -$signal $pid"
    echo $cmd
    eval $cmd
    for i in $(seq 20); do
      if ! (pidrunning $pid); then
        echo "pid $pid no longer exists"
        return 0
      fi
      sleep 0.1
    done
  done
  if (pidrunning $pid); then
    echo "pid $pid still exists"
  fi
}

# usage: upload <IP ADDRESS> <LOCAL PATH> <REMOTE PATH>
function upload() {
  rsync --progress -avhLe ssh "$2" $1:"$3"
}

# usage: download <IP ADDRESS> <REMOTE PATH> <LOCAL PATH>
function download() {
  rsync --progress --rsync-path="sudo rsync" -avhLe ssh $1:"$2" "$3"
}
# }}}

# Ruby {{{
alias ruby-install="\ruby-install --rubies-dir ~/.rubies"   # ruby-install ruby 2.2.2
if [ -e /usr/local/opt/chruby/share/chruby ]; then
  source /usr/local/opt/chruby/share/chruby/chruby.sh
  source /usr/local/opt/chruby/share/chruby/auto.sh
fi
[ -e ~/.ruby-version ] && chruby $(<~/.ruby-version)
# }}}

# Go {{{
export GOPATH=~/.go
export PATH=$GOPATH/bin:$PATH
alias gom="gometalinter --enable-all --line-length=120 --deadline=180s ./..."
alias got='go test -v ./...'
# }}}

# FZF {{{
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
# }}}}

# Rust {{{
[[ -e "$HOME/.cargo/env" ]] && source "$HOME/.cargo/env"
# }}}

# Node {{{
# export PATH="./node_modules/.bin:$PATH"
# }}}

# exa {{{
# -l = long (table) format
# -a = display all (including hidden) files
# -g = display each file's group
# -F = display a type indicator by files (dirs have a trailing slash, like ls -p)
# --group-directories-first = does what it says on the tin
# --git = provides a git status for each file (if under revision control)
# --time-style long-iso = use a long iso format for date/time info
alias ll="exa -lagF --group-directories-first --git --time-style long-iso"
# }}}

# fasd {{{
# eval "$(fasd --init posix-alias posix-hook)"
# eval "$(fasd --init posix-alias)"
# }}}

# Vim / Neovim {{{
if [ -n "$NVIM_LISTEN_ADDRESS" ]; then
  nvim_target=nvr
else
  nvim_target=nvim
fi
function nvim_launch() {
  if [[ -n $NVIM_LISTEN_ADDRESS && "$#" -eq 0 ]]; then
    $nvim_target .
  else
    $nvim_target "$@"
  fi
}
alias nvim=nvim_launch
alias n=nvim_launch
alias vi=nvim_launch
alias vim=nvim_launch
alias vimwiki="$nvim_target ~/.vimwiki/index.md"
alias guide='$nvim_target ~/git/public/vim_guide/vim_guide.md'
alias fn="f -e $nvim_target"
alias no="nvr -o"
# }}}

# Postgresql {{{
# alias pgstart='pg_ctl -D /usr/local/var/postgres start'
# alias pgstop='pg_ctl -D /usr/local/var/postgres stop'
# }}}

# Private rc content {{{
[ -e ~/.mkshrc_private ] && source ~/.mkshrc_private
# }}}

export PATH=~/bin:$PATH
